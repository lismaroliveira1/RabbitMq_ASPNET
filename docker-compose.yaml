version: '3.4'

networks:
  dev:
    driver: bridge
  rabbitmq_go_net:
    driver: bridge

services:
  asp-net-app:
    image: docker.io/library/challengeapp
    depends_on:
      - postgres
    container_name: challengeapp-services
    ports:
      - "8088:80"
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Passowrd=postgres;Server=app_db;Port=5433;Database=SampleDbDriver; IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URL=htpp://+:80
    networks:
      - dev
  postgres:
    image: postgres:latest
    container_name: app_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=SampleDbDriver
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - app_data:/var/lib/postgres/data
    networks:
      - dev
  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net
  client-service:
    image: trycatchlearn/client-svc:latest
    build: 
      context: .
      dockerfile: src/services/client/Client.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONEMT=Development
      - ASPNETCORE_URLS=http://+80
      - BusConnection__HostName=rabbitmq
      - BusConnection__UserName=guest
      - BusConnection__Password=guest
      - BusConnection__RetryCount=4
      - ConnectionStrings__DefaultConnection=Host=localhost;Username=postgres;Password=postgres;Database=SampleDbDriver; PORT=5433
    depends_on:
      - postgres
      - rabbitmq

volumes:
  app_data:
